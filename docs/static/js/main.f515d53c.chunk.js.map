{"version":3,"sources":["libs/info.js","libs/attr.js","libs/util.js","libs/traveler.js","libs/queue.js","libs/quest.js","libs/mocktest.js","libs/localmodel.js","contexts/MyLocalModel.tsx","components/Gnb.tsx","components/AttrModal.tsx","components/Quest.tsx","components/MockTest.tsx","components/MockTestModal.tsx","components/Main.tsx","AppIn.tsx","App.tsx","index.tsx"],"names":["Info","names","attrs","console","assert","Array","length","this","comment","parent","childs","id","jsid","jsidcnt","Attr","pinfo","prefix","content","postfix","nidx","josa","Util","min","max","Math","ceil","floor","random","n","N","Error","out","i","shuffle","slice","arr","outplace","temp","idx1","idx2","random_int","random_choices","map","idx","get_randomly","Traveler","forEachPre","root","consummer","forEach","child","forEachPost","selectNegativeInfos","material","comm","visited","info","traverseUp","push","selectPositiveAttrs","get_randomly_multi","selectNegativeAttrs","infos","concat","Queue","first","last","size","value","next","empty","Quest","type","title","statement","choices","answers","materials","isArray","log","evaluate","quest","response","evaluator","generate_binary_quest","ans","fact","getHintSentence","getFullSentence","generate_selection_quest","a","inv","p","pos","neg","attr","indexOf","name","logic_label","sort","generate_short_quest","stmt","generate_selection2_quest","neg_infos","Mocktest","quests","select_test_materials","subinfos","ratio","m","quotient","k","create_mocktest","domains","quest_types","type_ptr","new_quest","feasible","filter","invert","LocalModel","devmode","wp","url","callback","window","setTimeout","axios","method","params","then","data","state","msg","myJson","ids","catch","err","createSubject","createAttr","createInfo","moveToParent","nodes","pInfo","newNode","__allocateInfo","pAttr","__appendAttr","edges","pair","__appendInfo","curnode","reverse","undefined","newInfo","Date","getTime","parentId","aid","newAttr","LocalModelContext","createContext","LocalModelDispatchContext","LocalModelReducer","action","currentPath","path","subjects","LocalModelCN","MyLocalModelContextProvider","children","useReducer","localModel","dispatch","Provider","useMyLocalModel","useContext","useMyLocalModelDispatch","GnbWrapper","styled","div","Gnb","MyLocalModel","handleExitToMainPageButton","useCallback","e","exitToMainPage","handleGoToUpperPageButton","getCurrentPath","reduce","prev","curr","onClick","customStyles","overlay","backgroundColor","padding","width","minwidth","maxWidth","border","borderRadius","top","left","right","bottom","marginRight","transform","boxSizing","Modal","setAppElement","ModalContents","SelBox","ul","SelElem","li","ImportantButtonWrapper","Preview","InputBox","SelButton","button","props","selected","checkBatchimEnding","word","uni","charCodeAt","makeSentence","prefixes","postfixes","string","trim","AttrModal","contentInputRef","useRef","React","useState","modalIsOpen","setIsOpen","setPrefix","setPostfix","setContent","preview","setPreview","isBatchimContent","setIsBatchimContent","closeModal","document","body","style","position","isBatchimName","prefixList","postfixList","handleMdoalBodyClick","current","focus","handlePrefixClick","handlePostfixClick","handleChangeContent","target","commitAttrHandler","prefixDecider","postfixDecider","getCurrentInfo","alert","Fragment","closeTimeoutMS","isOpen","onRequestClose","contentLabel","onAfterClose","shouldCloseOnOverlayClick","onAfterOpen","x","key","placeholder","ref","onChange","disabled","QuestElem","Statement","Selection","InputAnswer","QuestComp","order","setSelectionFn","selection","setValueAsync","newArr","onChange2","inputChangeHandler","split","b","stopPropagation","htmlFor","checked","toString","MockTestWrapper","MockTestTitle","MockTestBody","MockTestExit","MockTest","closeHandler","fill","setSelection","closeClickHandler","defaultProps","height","overflow","MockTestModal","mockTestData","setModalIsOpen","setMockTestData","MainWrapper","CenterWrapper","Button","danger","Subjects","Subject","add","InfoWrapper","Attrs","InfoList","CreateProblemWrapper","CreateProblemButton","Main","isOpenMockTest","setIsOpenMockTest","handleIntoSubject","moveToSubject","recvInfo","handleIntoInfo","moveToChild","savedInfo","handleCreateAndIntoSubject","input_subject","prompt","handleAddInfo","input_info","handleCreateMockTest","createMocktest","join","AppIn","useEffect","getSubjectsList","recv","className","preventDefault","App","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.f515d53c.chunk.js","sourcesContent":["class Info {\n\t/*\n\t\tString[] names: 지식의 이름들, 반드시 1개 이상\n\t\tAttr  [] attrs: 지식의 속성들\n\t*/\n\tconstructor(names, attrs) {\n\t\tconsole.assert(names instanceof Array && names.length > 0);\n\t\tconsole.assert(attrs instanceof Array);\n\n\t\tthis.names = names;\n\t\tthis.attrs = attrs;\n\t\tthis.comment = '';\n\n\t\t// parent는 이 Info를 소유한 지식을 레퍼런스로 저장한다.\n\t\t// childs는 이 Info가 가진 하위 지식(들)을 레퍼런스로 저장한다.\n\t\tthis.parent = null;\n\t\tthis.childs = [];\n\n\t\t// id는 DB에 지식이 처음으로 저장될 때 할당받는다.\n\t\t// 클라이언트에서 생성된 지식은 id를 갖지 않는다.\n\t\tthis.id = null;\n\n\t\t// jsid는 클라이언트에서 임의의 두 지식을 식별하기 위한 값이다.\n\t\t// 이 값은 클라이언트가 실행된 이후로 Info가 생성된 순서와 같다.\n\t\t// 본래 id가 그 역할을 했으나, 몽고 DB에서의 고유키를 저장하는 것으로 바뀌면서\n\t\t// jsid가 탄생하였다. jsid의 유일성은 한 세션 내에서만 보장된다.\n\t\tthis.jsid = Info.jsidcnt++;\n\t\t\n\t\t//this.ext = [];\n\t}\n\n\ttoJSON() {\n\t\treturn {\n\t\t\tnames: this.names,\n\t\t\tattrs: this.attrs,\n\t\t\tcomment: this.comment,\n\t\t\tid: this.id\n\t\t};\n\t}\n}\n\nInfo.jsidcnt = 0;\n\nexport default Info;\n","/*\n\tAttr 클래스는 Info의 속성, 문장을 매끄럽게\n\t나타낼 수 있는 조사 및 어미를 저장다.\n*/\nclass Attr {\n\t/*\n\t\tLocalModel에서 새로운 주제/속성 생성\n\t\t인터페이스를 제공하므로, 외부 사용자는\n\t\t이 생성자를 사용하지 말 것\n\n\t\tInfo pinfo\n\t\t\t이 Attr을 소유하는 Info\n\t\t\t\n\t\tString prefix\n\t\t\tpinfo의 이름에 대응되는 조사\n\t\t\tex) 사과\"는\" 바보다\n\n\t\tString content\n\t\t\t이 Attr의 내용을 서술하는 구\n\t\t\tex) 사과는 \"바보\"다\n\n\t\tString postfix\n\t\t\tcontent에 대응되는 접미사\n\t\t\t문장부호는 붙이지 않는다.\n\t\t\tex) 사과는 바보\"다\"\n\t*/\n\tconstructor(pinfo, prefix, content, postfix) {\n\t\tconsole.assert(pinfo != null);\n\t\tconsole.assert(typeof(prefix) == 'string');\n\t\tconsole.assert(typeof(content) == 'string');\n\t\tconsole.assert(typeof(postfix) == 'string');\n\n\t\tthis.pinfo = pinfo;\n\t\tthis.prefix = prefix;\n\t\tthis.content = content;\n\t\tthis.postfix = postfix;\n\t\tthis.id = null;\n\t}\n\n\t/*\n\t\t이 속성을 완전히 설명하는 문장을 반환한다.\n\t\t이때 문장의 마지막에 부호를 붙인다.\n\t\tex) \"사과는 바보다.\"\n\n\t\tInteger nidx (Optional)\n\t\t\t부모의 이름 중 몇 번째를 가져올지 결정한다.\n\t\t\t생략되면 0으로 간주한다.\n\t*/\n\tgetFullSentence(nidx) {\n\t\tnidx = nidx ? nidx : 0;\n\t\treturn this.pinfo.names[nidx]\n\t\t\t+ this.prefix + ' '\n\t\t\t+ this.content + this.postfix + '.';\n\t}\n\n\t/*\n\t\t주어를 제외한 문장을 반환한다.\n\t\tex) \"는 바보다.\"\n\t*/\n\tgetHintSentence(josa) {\n\t\treturn (josa ? this.prefix + ' ' : '') + this.content + this.postfix + '.';\n\t}\n};\n\nexport default Attr;\n","const Util = {};\n\n/*\n\tmin ≤ x ≤ max, x ∈ Z를 만족하는 임의의 정수를 반환한다.\n*/\nUtil.random_int = function(min, max) {\n\tmin = Math.ceil(min);\n\tmax = Math.floor(max);\n\treturn Math.floor(Math.random() * (max - min) + min + 0.5);\n};\n\n/*\n\tmin ≤ x ≤ max, x ∈ Z를 만족하는 중복되지 않는\n\tn개의 서로 다른 x를 만들어서 반환한다.\n\tO(max - min)의 공간복잡도와 시간복잡도가 발생한다.\n*/\nUtil.random_choices = function(min, max, n) {\n\tmin = Math.ceil(min);\n\tmax = Math.floor(max);\n\tlet N = max - min + 1;\n\tif(N < n) {\n\t\tthrow new Error(`[random_choice] Cannot choose ${n} different numbers between ${min} ~ ${max}`);\n\t}\n\n\t// min ~ max까지의 숫자를 만든다\n\tlet out = [];\n\tfor(let i = 0; i < N; ++i)\n\t\tout[i] = min + i;\n\n\t// 적당히 섞는다.\n\tUtil.shuffle(out);\n\n\t// n개만 반환한다.\n\tif(n == N)\n\t\treturn out;\n\telse\n\t\treturn out.slice(0, n);\n};\n\n/*\n\tarr를 무작위로 섞는다.\n\toutplace가 true이면 새 배열을 반환한다.\n*/\nUtil.shuffle = function(arr, outplace) {\n\tif(outplace)\n\t\tarr = arr.slice();\n\tlet temp, idx1, idx2;\n\tfor(let i = 0; i < 4 * arr.length; ++i) {\n\t\tidx1 = Util.random_int(0, arr.length - 1);\n\t\tidx2 = Util.random_int(0, arr.length - 1);\n\t\ttemp = arr[idx1];\n\t\tarr[idx1] = arr[idx2];\n\t\tarr[idx2] = temp;\n\t}\n\treturn arr;\n};\n\n/*\n\t배열 arr에서 아무 원소나 반환한다.\n\t시간 복잡도가 O(1)이다\n*/\nUtil.get_randomly = function(arr) {\n\treturn arr[Util.random_int(0, arr.length - 1)];\n};\n\n/*\n\t배열 arr에서 아무 원소를 n개 찍어서 반환한다.\n\t시간 복잡도가 O(n)이다\n*/\nUtil.get_randomly_multi = function(arr, n) {\n\treturn Util.random_choices(0, arr.length - 1, n).map(idx => {\n\t\treturn arr[idx];\n\t});\n};\n\n/*\n\t배열 arr에서 아무 원소를 n개 찍어서 반환한다.\n\t중복이 허용된다.\n*/\nUtil.get_randomly_multi_dup = function(arr, n) {\n\tlet out = [];\n\tfor(let i = 0; i < n; ++i)\n\t\tout[i] = Util.get_randomly(arr);\n\treturn out;\n};\n\n// module.exports = Util;\nexport default Util;\n","// const Util = require('./util');\nimport Util from './util';\n\n/*\n\tTraveler 클래스는 알고리즘이 트리를 쉽게\n\t탐색 할 수 있도록 도와주는 유틸리티 클래스다.\n*/\nclass Traveler {\n};\n\n/*\n\t전위탐색으로 트리를 순회하며 consummer를 호출한다.\n\n\tInfo root\n\t\t트리의 루트 주제\n\n\tfunction(info) consummer\n\t\t순회하면서 호출할 함수\n*/\nTraveler.forEachPre = function(root, consummer) {\n\tconsummer(root);\n\troot.childs.forEach(child => {\n\t\tTraveler.forEachPre(child, consummer);\n\t});\n};\n\n/*\n\t후위탐색으로 트리를 순회하며 consummer를 호출한다.\n\n\tInfo root\n\t\t트리의 루트 주제\n\n\tfunction(info) consummer\n\t\t순회하면서 호출할 함수\n*/\nTraveler.forEachPost = function(root, consummer) {\n\troot.childs.forEach(child => {\n\t\tTraveler.forEachPost(child, consummer);\n\t});\n\tconsummer(root);\n};\n\n/*\n\tmaterial과 관계없는 지식들을 Info[]로 반환한다.\n\t정점 수 V에 대해 O(lg V)의 시간복잡도로 동작한다.\n\t반환된 배열의 앞쪽에 있는 지식일수록 그래프 상에서\n\t거리가 가깝다.\n*/\nTraveler.selectNegativeInfos = function(material) {\n\tconsole.assert(material != null);\n\n\tfunction traverseUp(root, comm) {\n\t\t// collect except visited node\n\t\troot.childs.forEach(child => {\n\t\t\tif (!comm.visited[child.jsid])\n\t\t\t{\n\t\t\t\t//comm.out.push(child);\n\t\t\t\tTraveler.forEachPre(child, info => {\n\t\t\t\t\tcomm.out.push(info);\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\n\t\t// going up\n\t\tcomm.visited[root.jsid] = true;\n\t\tif (root.parent)\n\t\t\ttraverseUp(root.parent, comm);\n\t}\n\n\tlet comm = { visited: {}, out: [] };\n\tTraveler.forEachPre(material, info => {\n\t\tcomm.visited[info.jsid] = true;\n\t});\n\ttraverseUp(material, comm);\n\treturn comm.out;\n};\n\n/*\n\tmaterial과 관계있는 속성들을 Attr[]로 반환한다.\n\tn개를 찾지 못할 수도 있다.\n*/\nTraveler.selectPositiveAttrs = function(material, n) {\n\tconsole.assert(material != null);\n\tif (n <= 1)\n\t\treturn [Util.get_randomly(material.attrs)];\n\telse\n\t\treturn Util.get_randomly_multi(material.attrs, Math.min(n, material.attrs.length));\n};\n\n/*\n\tmaterial과 관계없는 속성들을 Attr[]로 반환한다.\n\tn개를 찾지 못할 수도 있따.\n*/\nTraveler.selectNegativeAttrs = function(material, n) {\n\tconsole.assert(material != null);\n\n\t// 속성을 전부 불러온다\n\tlet infos = Traveler.selectNegativeInfos(material);\n\tlet attrs = [];\n\tinfos.forEach(info => {\n\t\tattrs = attrs.concat(info.attrs);\n\t});\n\n\tif (n <= 1)\n\t\treturn [Util.get_randomly(attrs)];\n\telse\n\t\treturn Util.get_randomly_multi(attrs, Math.min(n, attrs.length));\n};\n\n// module.exports = Traveler;\nexport default Traveler;","class Queue {\n\tconstructor() {\n\t\tthis.first = null;\n\t\tthis.last = null;\n\t\tthis.size = 0;\n\t}\n\n\tpush(value) {\n\t\tif(this.first == null) {\n\t\t\tthis.first = this.last = {\n\t\t\t\tvalue,\n\t\t\t\tnext: null\n\t\t\t};\n\t\t}\n\t\telse {\n\t\t\tthis.last = this.last.next = {\n\t\t\t\tvalue,\n\t\t\t\tnext: null\n\t\t\t};\n\t\t}\n\t\t++this.size;\n\t\treturn value;\n\t}\n\n\tpop() {\n\t\tif(!this.first)\n\t\t\treturn null;\n\t\tlet out = this.first.value;\n\t\tthis.first = this.first.next;\n\t\tif(this.first == null)\n\t\t\tthis.last = null;\n\t\t--this.size;\n\t\treturn out;\n\t}\n\n\tfront() {\n\t\tif(this.empty())\n\t\t\treturn null;\n\t\treturn this.first.value;\n\t}\n\n\tback() {\n\t\tif(this.empty())\n\t\t\treturn null;\n\t\treturn this.last.value;\n\t}\n\n\tempty() {\n\t\treturn this.first == null;\n\t}\n};\n\n// module.exports = Queue;\nexport default Queue;\n","// const Info = require('./info');\n// const Traveler = require('./traveler');\n// const Util = require('./util');\n// const Queue = require('./queue');\n\nimport Traveler from './traveler';\nimport Util from './util';\nimport Queue from './queue';\n\n/*\n\tQuest 쓰는 방법\n\n\t1. 문제 만들기\n\tlet quest = Quest.{만들고 싶은 문제에 해당하는 생성 함수}([인자])\n\tquest.statement\t// 지문\n\tquest.choices\t// 선택지로 보여줄 문자열 집합\n\tquest.answers\t// 정답\n\n\t2. 문제 매기기\n\tboolean Quest.evaluate(quest, response)\n\n\t3. 참/거짓 문제\n\tQuest Quest.generate_binary_quest(Info g);\n\n\t참/거짓 문제의 response는 ['T'] 또는 ['F'] 여야 한다.\n\t\n\t4. n지선다 문제\n\tQuest Quest.generate_selection_quest(Info g, int n, int a, boolean inv)\n\t\tn: 선택지 수\n\t\ta: 골라야 하는 답의 수\n\t\tinv: 참이면 '옳지 않은 것', 거짓이면 '옳은 것'\n\n\tn지선다 문제의 response는 ['0', '3', ...], 즉 음이 아닌 정수를 나타낸\n\t문자열의 집합이어야 한다.\n\n\t5. 단답형 문제\n\tQuest Quest.generate_short_quest(Info g, int n);\n\t\tn: 주어지는 정보 수\n\n\t6. n지선다 문제 Attr to Name형\n\tQuest Quest.generate_selection2_quest(Info g, int n, int a)\n\t\tn: 선택지 수\n\t\ta: 골라야 하는 답의 수\n\n\t이 이외의 함수는 건드렸을 때 책임 안짐\n*/\n\nclass Quest {\n  /*\n\t\ttype은 {'binary', 'selection', 'short'} 중 하나일 것\n\t*/\n  constructor(type, title, statement, choices, answers, materials) {\n    console.assert(type);\n    console.assert(title);\n    console.assert(Array.isArray(choices));\n    console.assert(Array.isArray(answers));\n    if (!Array.isArray(answers)) {\n      console.log('babo');\n      console.log(answers);\n    }\n    this.type = type;\n    this.title = title;\n    this.statement = statement;\n    this.choices = choices;\n    this.answers = answers;\n    this.materials = materials;\n  }\n}\n\nQuest.evaluate = function(quest, response) {\n  return Quest.evaluator[quest.type](quest, response);\n};\n\nQuest.evaluator = {};\n\n// 참/거짓 유형 문제 생성\nQuest.generate_binary_quest = function(material) {\n  let ans = null;\n  let fact = null;\n\n  // 부모가 없음, 즉 루트인 경우 부정명제를 가져올 수 없다.\n  // 따라서 이 경우 항상 참인 명제만 선택하게 한다.\n  if (material.parent != null && Math.random() > 0.5) {\n    ans = 'F';\n    //if(Math.random() > 0.5)\n    // \tfact = Soup.select_negative_attrs(material, 1);\n    // else\n    // \tfact = Soup.mutate_attr(Soup.select_positive_attr(material));\n    fact =\n      material.names[0] +\n      Traveler.selectNegativeAttrs(material, 1)[0].getHintSentence(true);\n  } else {\n    ans = 'T';\n    fact = Traveler.selectPositiveAttrs(material, 1)[0].getFullSentence();\n  }\n\n  let name = Util.get_randomly(material.names);\n  return new Quest(\n    'binary',\n    '다음 문장의 참/거짓을 판별하시오.',\n    fact,\n    ['T', 'F'],\n    [ans],\n    material,\n  );\n};\n\n// 참거짓 채점기\n// 답을 맞춰야 함\n// Info g\nQuest.evaluator['binary'] = function(quest, response) {\n  if (response.length != 1) return false;\n  else return quest.answers[0] == response[0];\n};\n\n// n지선다 유형 문제 생성\n// material은 반드시 root가 아니어야 한다. root면 무조건 에러난다.\n// 문제 생성에 실패할 경우 에러가 발생한다.\n//\n// material의 속성의 수는 a (inv가 true이면 n - a)개 이상이어야 한다.\n// material: 문제를 출제할 지식\n// n: 선택지의 수\n// a: 정답의 수\n// inv: 옳은/옳지 않은\nQuest.generate_selection_quest = function(material, n, a, inv) {\n  let p = inv ? n - a : a;\n\n  // 정답 선택지 만들기\n  let pos = Traveler.selectPositiveAttrs(material, p);\n\n  // 오답 선택지 만들기\n  let neg = Traveler.selectNegativeAttrs(material, n - p);\n\n  // 선택지 만들기\n  // 일단 정답부터 만들고, attr 개체를 string으로 변환한다.\n  // 섞고, pos가 있는 위치들을 찾고, pos와 neg를 문장으로 변환.\n  let choices = Util.shuffle(pos.concat(neg), false);\n  let answers = null;\n  if (inv)\n    answers = neg.map((attr) => {\n      return `${choices.indexOf(attr)}`;\n    });\n  else\n    answers = pos.map((attr) => {\n      return `${choices.indexOf(attr)}`;\n    });\n  let name = Util.get_randomly(material.names);\n  choices = choices.map((attr) => {\n    return attr.getHintSentence(false);\n  });\n\n  // 표현\n  let logic_label = inv ? '옳지 않은 것' : '옳은 것';\n  return new Quest(\n    'selection',\n    `다음 중 ${name}에 대한 설명으로 ${logic_label}을 고르시오.`,\n    null,\n    choices,\n    answers,\n    material,\n  );\n};\n\n// n지선다 채점기\n// 답을 모두 맞춰야 함\nQuest.evaluator['selection'] = function(quest, response) {\n  if (quest.answers.length != response.length) return false;\n  quest.answers.sort();\n  response.sort();\n  for (let i = 0; i < response.length; ++i)\n    if (quest.answers[i] != response[i]) return false;\n  return true;\n};\n\n// 단답식 유형 문제 생성\nQuest.generate_short_quest = function(material, n) {\n  // 속성이 n개보다 적을 경우, n을 조절해줘서 util.js가\n  // 뻑나지 않도록 한다.\n  if (material.attrs.length < n) n = material.attrs.length;\n  let attrs = Traveler.selectPositiveAttrs(material, n);\n  let title = '다음이 설명하는 것을 적으시오.';\n  let stmt = '';\n  attrs.forEach((attr) => {\n    stmt += '\\n * ' + attr.getHintSentence(false);\n  });\n  return new Quest('short', title, stmt, [], material.names, material);\n};\n\n// 단답식 채점기\n// 답 중 하나만 맞추면 됨\nQuest.evaluator['short'] = function(quest, response) {\n  if (response.length != 1) return false;\n  for (let i = 0; i < quest.answers.length; ++i)\n    if (quest.answers[i] == response[i]) return true;\n  return false;\n};\n\n// n지선다 유형 II 문제 생성\n// 속성을 주고 이름을 고르는 것\n// material은 반드시 root가 아니어야 한다. root면 무조건 에러난다.\n// 문제 생성에 실패할 경우 에러가 발생한다.\n//\n// 그래프에 n개 이상의 지식이 존재해야 한다.\n// material: 문제를 출제할 지식\n// n: 선택지의 수\nQuest.generate_selection2_quest = function(material, n) {\n  // 다른 지식의 이름을 가져올 범위를 찾는다.\n  let g = material;\n  let q = new Queue();\n\n  // 정답 선택지 만들기\n  let pos = material;\n\n  let title = '다음이 설명하는 것으로 알맞은 것을 고르시오.';\n  let stmt = '';\n  pos.attrs.forEach((attr) => {\n    stmt += '\\n * ' + attr.getHintSentence(false);\n  });\n\n  // 오답 선택지 찾기\n  let neg_infos = Traveler.selectNegativeInfos(material);\n\n  // 선택지 합치기\n  neg_infos.push(pos);\n  neg_infos = neg_infos.slice(0, n);\n  Util.shuffle(neg_infos, false);\n  let choices = neg_infos.map((info) => {\n    return Util.get_randomly(info.names);\n  });\n  let answers = [`${neg_infos.indexOf(material)}`];\n\n  // 표현\n  return new Quest('selection', title, stmt, choices, answers, material);\n};\n\n// module.exports = Quest;\nexport default Quest;","// const Info = require('./info');\n// const Traveler = require('./traveler');\n// const Quest = require('./quest');\n// const Util = require('./util');\n\nimport Traveler from './traveler';\nimport Quest from './quest';\nimport Util from './util';\n\n/*\n\t외부 사용법\n\n\tlet domains = 선택한 과목/폴더/필기에 해당하는 Info의 배열\n\tlet mocktest = Mocktest.create_mocktest(domains, 문제수)\n\tmocktest.quests.forEach(q => {\n\t\tif(!q)\n\t\t\treturn;\n\n\t\t// DOM에 q를 렌더링하기\n\t})\n\n\t가끔 버그로 문제 생성 실패할 때가 있는데 그 문제(quest)는 NULL로\n\t채워진다. 나중에 버그 수정할 예정이니 NULL 대응 부탁 바람\n*/\n\n// 절대 외부에서 이 클래스를 직접 인스턴스화하지 마시오\nclass Mocktest {\n\tconstructor(quests) {\n\t\tconsole.assert(quests instanceof Array);\n\t\tthis.quests = quests;\n\t}\n}\n\n// root를 루트로 갖는 서브트리에서 n개의 문제를 출제한다.\n// 최대한 비슷한 수의 문제가 출제되도록 하되\n// 정확하게 나누어 떨어지지 않는 경우엔 균등\n// 분포로 무작위로 고른다.\nMocktest.select_test_materials = function(root, n) {\n\t// 안전장치\n\tif(n <= 0)\n\t\treturn [];\n\n\t// 재료를 찾는다.\n\t// let subinfos = Soup.fetch_subinfos(roots).filter(info => {\n\t// \treturn info.attrs.length > 0 && roots.indexOf(info) == -1;\n\t// });\n\tlet subinfos = [];\n\tTraveler.forEachPre(root, (info) => {\n\t\tif (info.attrs.length > 0)\n\t\t\tsubinfos.push(info);\n\t});\n\n\n\t// 초기화\n\tlet ratio = [];\n\tlet m = subinfos.length;\n\tlet quotient = Math.floor(n / m);\n\tfor(let i = 0; i < m; ++i)\n\t\tratio[i] = quotient;\n\tn -= quotient * m;\n\t\n\t// 나머지는 랜덤분배\n\tif(n > 0) {\n\t\tUtil.random_choices(0, m - 1, n).forEach(idx => {\n\t\t\tratio[idx] += 1;\n\t\t});\n\t}\n\n\t// 분배된 만큼 지식을 리스트로 나열한다.\n\t// ex) [1번지식, 1번지식, 4번지식, 9번지식 ...]\n\tlet out = [];\n\tfor(let i = 0; i < ratio.length; ++i)\n\t\tfor(let k = 0; k < ratio[i]; ++k)\n\t\t\tout.push(subinfos[i]);\n\n\t// 순서를 적절히 섞는다.\n\t// 2번째 인자는 outplace = false\n\treturn Util.shuffle(out, false);\n}\n\n// Info \troots \t문제 출제 범위\n// Number \tn \t\t문제 출제 수\nMocktest.create_mocktest = function(root, n) {\n\t// 문제 출제 범위 생성\n\tlet domains = Mocktest.select_test_materials(root, n);\n\t\n\tlet quest_types = [];\n\n\t// 4문제보다 적은 경우 그냥 n-1번째 유형까지만 만든다.\n\tif (n < 4) {\n\t\tfor (let k = 0; k < n; ++k)\n\t\t\tquest_types[k] = 1;\n\t}\n\telse {\n\t\tquest_types[0] = Math.floor(n / 4.0);\n\t\tquest_types[1] = Math.floor(n / 4.0);\n\t\tquest_types[2] = Math.floor(n / 4.0);\n\t\tquest_types[3] = n \n\t\t\t- quest_types[0]\n\t\t\t- quest_types[1]\n\t\t\t- quest_types[2];\n\t}\n\n\t// 각 유형별로 문제를 만든다.\n\tlet quests = [];\n\tlet type_ptr = 0;\n\tfor(let k = 0; k < n; ++k) {\n\t\t// 현재 유형을 다 만들면 다음 유형으로 넘어간다.\n\t\tif(quest_types[type_ptr]-- <= 0) {\n\t\t\t++type_ptr;\n\t\t\t--k;\n\t\t\tcontinue;\n\t\t}\n\t\tconsole.assert(type_ptr < quest_types.length);\n\n\t\t// 각 유형에 맞는 문제를 만든다.\n\t\tlet new_quest = null;\n\t\tif(type_ptr == 0) {\n\t\t\tnew_quest = Quest.generate_binary_quest(domains[k]);\n\t\t}\n\t\telse if(type_ptr == 2) {\n\t\t\tnew_quest = Quest.generate_short_quest(domains[k], 4);\n\t\t}\n\t\telse {\n\t\t\t// 4지선다형은 루트를 소재로 할 수 없기 때문에\n\t\t\t// 만약 루트가 걸릴 경우 1. 자식 중 아무나 선택\n\t\t\t// 2. 자식이 없으면 다른 유형으로 변경 한다.\n\t\t\tif (domains[k].parent == null) {\n\t\t\t\tif (domains[k].childs.length > 0) {\n\t\t\t\t\tlet feasible = domains[k].childs.filter(child => {\n\t\t\t\t\t\treturn child.attrs.length >= 1;\n\t\t\t\t\t});\n\n\t\t\t\t\t// 자식으로 쓸만한 애가 없으면 그냥 다른 유형으로 만든다\n\t\t\t\t\tif (feasible.length == 0) {\n\t\t\t\t\t\tif (Math.random() > 0.5)\n\t\t\t\t\t\t\tnew_quest = Quest.generate_binary_quest(domains[k]);\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tnew_quest = Quest.generate_short_quest(domains[k], 4);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdomains[k] = Util.get_randomly(feasible);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tif (Math.random() > 0.5)\n\t\t\t\t\t\tnew_quest = Quest.generate_binary_quest(domains[k]);\n\t\t\t\t\telse\n\t\t\t\t\t\tnew_quest = Quest.generate_short_quest(domains[k], 4);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// 예외 생성이 아닌 경우, 정상적으로 문제를 만든다.\n\t\t\tif (new_quest == null) {\n\t\t\t\tif(type_ptr == 1) {\n\t\t\t\t\t// 옳지 않은 것을 고를 때는 최소한 올바른 속성이 3개 이상 있어야만\n\t\t\t\t\t// 에러가 나지 않는다.\n\t\t\t\t\tlet invert = domains[k].attrs.length >= 3 && Math.random() > 0.5;\n\t\t\t\t\tnew_quest = Quest.generate_selection_quest(domains[k], 4, 1, invert);\n\t\t\t\t}\n\t\t\t\telse if(type_ptr == 3) {\n\t\t\t\t\tnew_quest = Quest.generate_selection2_quest(domains[k], 4);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tquests.push(new_quest);\n\t}\n\n\treturn new Mocktest(quests);\n}\n\n// module.exports = Mocktest;\nexport default Mocktest;","// const Info = require('./info');\n// const Attr = require('./attr');\n// const Mocktest = require('./mocktest');\n// const axios = require('axios').default;\n\nimport Info from './info';\nimport Attr from './attr';\nimport Mocktest from './mocktest';\nimport axios from 'axios';\n\n/*\n\tLocalModel은 클라이언트에서 다루는 주제 트리와\n\t현재 위치 등을 다루는 상태 관리 클래스다.\n\t외부에서 트리 탐색을 좀 더 쉽게 할 수 있다.\n\n\tLocalModel의 내부에는 wp(working page)라는\n\t레퍼런스가 존재하며, 이것으로 현재 페이지를\n\t구분할 수 있다.\n*/\nclass LocalModel {\n  /*\n\t\t네트워크 통신 없이 내장된 모델로 수행하려면\n\t\tdevmode를 켜주세요.\n\t*/\n  constructor(devmode) {\n    // WorkingPointer(이하 wp)는 파일 시스템의\n    // Working Directory와 비슷한 개념으로,\n    // 현재 맥락(Context)에서 보여줄 지식을 가리킨다.\n    // 만약 주제에 진입하지 않은 경우 null을 가리킨다.\n    this.wp = null;\n\n    //\n    // jsid -> Info로 매핑해주는 변수\n    this.infos = {};\n\n    // 프론트 개발을 쉽게 할 목적으로 만든 모드\n    // 네트워크 통신을 수행하지 않고 미리 하드코딩한\n    // 모델을 사용한다.\n    this.devmode = devmode;\n\n    // 서버 주소\n    this.url = 'http://52.79.78.251:3000/v01/doc';\n  }\n\n  /*\n\t\t서버에 존재하는 모든 주제의 리스트를 불러와\n\t\tcallback으로 전달한다. 실패하면 []를 전달한다.\n\n\t\tdevmode에서는 하드코딩된 [{name: '국밥', id: 1}]을 전달한다.\n\n\t\t전달 형식:\n\t\t\t[{name: '주제명', id: '주제id'}]\n\t*/\n  getSubjectsList(callback) {\n    if (this.devmode) {\n      if (callback)\n        window.setTimeout(() => {\n          callback([{ name: '국밥', id: 1 }]);\n        }, 0);\n    } else {\n      // 요청 !\n      axios({\n        method: 'get',\n        url: this.url + '/getInfosList',\n        params: {},\n      })\n        .then((response) => {\n          // response에 대한 자세한 전달 데이터는\n          // https://git.alien.moe/ynifamily3/software-competition/wiki/%ED%86%B5%EC%8B%A0%EA%B7%9C%EA%B2%A9\n          // 참고\n          // 에러 체크\n          if (!response.data.state) {\n            console.log('[LocalModel::getSubjectsList] Fail to fetch data.');\n            console.log(response.data.msg);\n            if (callback) callback([]);\n            return;\n          }\n\n          console.log(response.data);\n          let myJson = response.data;\n\n          if (!callback) return;\n\n          let out = [];\n          for (let i = 0; i < myJson.names.length; ++i) {\n            out.push({\n              name: myJson.names[i],\n              id: myJson.ids[i],\n            });\n          }\n          callback(out);\n        })\n        .catch((err) => {\n          console.log('[LocalModel::getSubjectsList] Fail to fetch data.');\n          console.log(err);\n        });\n    }\n  }\n\n  /*\n\t\t서버에서 id를 ID로 갖는 주제를 불러온 뒤\n\t\t그 주제의 최상단 지식으로 이동한다.\n\n\t\t불러오는데 성공하면 callback으로 최상단 Info를\n\t\t전달하며 실패하면 callback으로 null을 전달한다.\n\n\t\tdevmode에서는 하드코딩된 국밥 주제를 로드하며\n\t\t항상 성공한다.\n\t*/\n  moveToSubject(id, callback) {\n    if (this.devmode) {\n      this.createSubject('국밥', null);\n      this.createAttr('은', '든든', '하다', null);\n      this.createAttr('은', '뜨뜻', '하다', null);\n\n      this.createInfo('돼지국밥', null);\n      this.createAttr('에는', '순대가 들어', '있다', null);\n      this.createAttr('은', '경남에서 유명', '하다', null);\n\n      this.createInfo('무봉리순대국밥', null);\n      this.createAttr('은', '경남의 체인점', '이다', null);\n      this.createAttr('에는', '20년째 운영하는 집도', '있다', null);\n\n      this.moveToParent();\n\n      this.createInfo('할매순대국밥', null);\n      this.createAttr('은', '실제로는 없는 브랜드', '이다', null);\n      this.createAttr('은', '어쩌면 하나쯤은 있을수도', '있다', null);\n\n      this.moveToParent();\n      this.moveToParent();\n\n      this.createInfo('소고기국밥', null);\n      this.createAttr('은', '대전이 맛있', '다', null);\n      this.createAttr('은', '얼큰한 국물이 인상적', '이다', null);\n      this.moveToParent();\n\n      // Comment\n      // 이거 나중에 Promise로 안바꾸면 재앙이\n      // 벌어질 것 같은 구조인데\\\n      if (callback)\n        window.setTimeout(() => {\n          callback(this.wp);\n        }, 0);\n      return;\n    }\n\n    axios({\n      method: 'get',\n      url: this.url + '/readInfo',\n      params: {\n        id: id,\n      },\n    })\n      .then((response) => {\n        // 에러 체크\n        if (!response.data.state) {\n          console.log('[LocalModel::moveToSubject] Fail to fetch data.');\n          console.log(response.data.msg);\n          if (callback) callback(null);\n          return;\n        }\n\n        // 토폴로지를 다시 재조립해준다.\n        // 원리는 다음과 같다.\n        // 1. 모든 Info를 일단 등록한다.\n        // 2. edges를 순회하며 연결해준다.\n        // 3. root를 this.wp에 등록한다.\n        let myJson = response.data;\n\n        // phase 1)\n        let nodes = myJson.nodes.map((pInfo) => {\n          // 새 Info 할당\n          let newNode = this.__allocateInfo(pInfo.name, []);\n          newNode.id = pInfo.id;\n\n          // 속성 등록\n          pInfo.attrs.forEach((pAttr) => {\n            this.__appendAttr(\n              newNode,\n              pAttr.prefix,\n              pAttr.content,\n              pAttr.postfix,\n              pAttr.id,\n            );\n          });\n\n          return newNode;\n        });\n\n        // phase 2)\n        myJson.edges.forEach((pair) => {\n          this.__appendInfo(nodes[pair[0]], nodes[pair[1]]);\n        });\n\n        // phase 3)\n        this.wp = nodes[0];\n\n        if (callback) callback(this.wp);\n      })\n      .catch((err) => {\n        console.log('[LocalModel::moveToSubject] Fail to fetch data.');\n        console.log(err);\n        if (callback) callback(null);\n      });\n  }\n\n  /*\n\t\t현재 wp가 가리키는 Info를 반환한다.\n\t\t만약 메인 페이지인 경우 null을 반환한다.\n\t*/\n  getCurrentInfo() {\n    return this.wp;\n  }\n\n  /*\n\t\t루트에서 현재 WorkingPointer까지의 경로를\n\t\tString[]으로 반환한다.\n\n\t\tex) [\"컴파일러\", \"LLParser\", \"복잡도\"]\n\t*/\n  getCurrentPath() {\n    if (this.wp == null) {\n      return [];\n    } else {\n      let out = [];\n      let curnode = this.wp;\n      while (curnode != null) {\n        out.push(curnode.names[0]);\n        curnode = curnode.parent;\n      }\n      // reverse 함수는 in-place이다.\n      return out.reverse();\n    }\n  }\n\n  /*\n\t\t현재 부모 Info를 반환한다.\n\t\t만약 부모가 메인 페이지인 경우 null을 반환한다.\n\t*/\n  getParentInfo() {\n    if (this.wp == null) {\n      return null;\n    } else {\n      return this.wp.parent;\n    }\n  }\n\n  /*\n\t\t현재 자식 Info들을 배열로 반환한다.\n\t\t만약 wp가 메인 페이지인 경우 []를 반환한다.\n\t*/\n  getChildInfos() {\n    if (this.wp == null) {\n      return [];\n    } else {\n      return this.wp.childs;\n    }\n  }\n\n  /*\n\t\t현재 wp의 부모로 이동하고\n\t\t그 부모의 Info를 반환한다.\n\n\t\t만약 wp 또는 부모가 메인 페이지인 경우 \n\t\t아무것도 하지 않고 null을 반환한다.\n\t*/\n  moveToParent() {\n    if (this.wp == null || this.wp.parent == null) {\n      return null;\n    } else {\n      return (this.wp = this.wp.parent);\n    }\n  }\n\n  /*\n\t\t현재 wp의 idx번째 자식으로 이동하고\n\t\t그 자식의 Info를 반환한다.\n\n\t\t만약 그런 자식이 없으면\n\t\t아무것도 안하고 null을 반환한다.\n\t\t\n\t\t만약 현재 페이지가 메인 페이지인 경우 \n\t\t아무것도 안하고 null을 반환한다.\n\t*/\n  moveToChild(idx) {\n    console.assert(idx !== undefined);\n    if (this.wp == null) {\n      return null;\n    } else if (this.wp.childs.length <= idx || idx < 0) {\n      return null;\n    } else {\n      return (this.wp = this.wp.childs[idx]);\n    }\n  }\n\n  /*\n\t\t종료하고 메인페이지로 돌아간다.\n\t*/\n  exitToMainPage() {\n    this.wp = null;\n    this.infos = {};\n  }\n\n  /*\n\t\t새 과목을 추가하고 wp를 그 과목으로 이동시킨다.\n\t\t그 과정에서 AJAX 통신이 발생한다.\n\n\t\tdevmode에서는 아무렇게나 ID를 부여한다.\n\n\t\tString   name\n\t\t\t새 과목의 이름\n\n\t\tfunction(wp) callback\n\t\t\t통신이 종료된 뒤 처리해야하는 로직\n\t\t\t인자로 wp Info를 준다.\n\t*/\n  createSubject(name, callback) {\n    if (this.devmode) {\n      let newInfo = this.__allocateInfo(name);\n      newInfo.id = `${new Date().getTime()}`;\n      this.wp = newInfo;\n\n      if (callback)\n        window.setTimeout(() => {\n          callback(this.wp);\n        }, 0);\n      return;\n    }\n\n    // 서버에 주제를 추가하고 id값을 받아온다.\n    // Fake Server인 경우 get으로 바꿔줘야 동작한다.\n    axios({\n      method: 'post',\n      url: this.url + '/createInfo',\n      data: {\n        name: name,\n        parentId: null,\n      },\n    })\n      .then((response) => {\n        // 에러 체크\n        if (!response.data.state) {\n          console.log('[LocalModel::createSubject] Fail to update data.');\n          console.log(response.data.msg);\n          if (callback) callback(null);\n          return;\n        }\n\n        // 새 주제를 추가한다.\n        let newInfo = this.__allocateInfo(name);\n        newInfo.id = response.data.id;\n        this.wp = newInfo;\n\n        if (callback) callback(this.wp);\n      })\n      .catch((err) => {\n        console.log('[LocalModel::createSubject] Fail to fetch data.');\n        console.log(err);\n        if (callback) callback(null);\n      });\n  }\n\n  /*\n\t\t새 하위 주제를 wp에 추가하고 wp를 그 주제로\n\t\t이동시킨다.\n\t\t그 과정에서 AJAX 통신이 발생한다.\n\t\t만약 wp가 null이면 아무것도 하지 않는다.\n\n\t\tString   name\n\t\t\t새 주제의 이름\n\n\t\tfunction(wp) callback\n\t\t\t통신이 종료된 뒤 처리해야하는 로직\n\t\t\t인자로 wp Info를 준다.\n\t*/\n  createInfo(name, callback) {\n    if (this.wp == null) return;\n\n    // 개발모드에서는 아무렇게나 id를 부여한다.\n    if (this.devmode) {\n      let newInfo = this.__allocateInfo(name);\n      this.__appendInfo(this.wp, newInfo);\n      this.wp = newInfo;\n      this.wp.id = `${new Date().getTime()}`;\n\n      if (callback)\n        window.setTimeout(() => {\n          callback(this.wp);\n        }, 0);\n      return;\n    }\n\n    // 서버에 주제를 추가하고 id값을 받아온다.\n    // Fake Server인 경우 get으로 바꿔줘야 동작한다.\n    axios({\n      method: 'post',\n      url: this.url + '/createInfo',\n      data: {\n        name: name,\n        parentId: this.wp.id,\n      },\n    })\n      .then((response) => {\n        // 에러 체크\n        if (!response.data.state) {\n          console.log('[LocalModel::createInfo] Fail to update data.');\n          console.log(response.data.msg);\n          if (callback) callback(null);\n          return;\n        }\n\n        // 새 주제를 추가하고 부모와 연결한다.\n        let newInfo = this.__allocateInfo(name);\n        this.__appendInfo(this.wp, newInfo);\n        this.wp = newInfo;\n        this.wp.id = response.data.id;\n\n        if (callback) callback(this.wp);\n      })\n      .catch((err) => {\n        console.log('[LocalModel::createInfo] Fail to fetch data.');\n        console.log(err);\n        if (callback) callback(null);\n      });\n  }\n\n  /*\n\t\t새 속성을 wp에 추가한다.\n\t\t그 과정에서 AJAX 통신이 발생한다.\n\t\t만약 wp가 null이면 아무것도 하지않는다.\n\n\t\tString prefix\n\t\t\tpinfo의 이름에 대응되는 조사\n\t\t\tex) 사과\"는\" 바보다\n\n\t\tString content\n\t\t\t이 Attr의 내용을 서술하는 구\n\t\t\tex) 사과는 \"바보\"다\n\n\t\tString postfix\n\t\t\tcontent에 대응되는 접미사\n\t\t\t문장부호는 붙이지 않는다.\n\t\t\tex) 사과는 바보\"다\"\n\n\t\tfunction(attr) callback\n\t\t\t통신이 종료된 뒤 처리해야하는 로직\n\t\t\t인자로 생성한 attr을 준다.\n\t*/\n  createAttr(prefix, content, postfix, callback) {\n    if (this.wp == null) return;\n\n    // 개발모드에서는 아무렇게나 ID를 부여한다.\n    if (this.devmode) {\n      let aid = `${new Date().getTime()}`;\n      let attr = this.__appendAttr(this.wp, prefix, content, postfix, aid);\n\n      if (callback)\n        window.setTimeout(() => {\n          callback(attr);\n        }, 0);\n      return;\n    }\n\n    // 서버에 속성을 추가하고 id값을 받아온다.\n    // Fake Server인 경우 get으로 바꿔줘야 동작한다.\n    axios({\n      method: 'post',\n      url: this.url + '/createAttr',\n      data: {\n        prefix: prefix,\n        content: content,\n        postfix: postfix,\n        parentId: this.wp.id,\n      },\n    })\n      .then((response) => {\n        // 에러 체크\n        if (!response.data.state) {\n          console.log('[LocalModel::createAttr] Fail to update data.');\n          console.log(response.data.msg);\n          if (callback) callback(null);\n          return;\n        }\n\n        // 새 주제를 추가하고 부모와 연결한다.\n        let attr = this.__appendAttr(\n          this.wp,\n          prefix,\n          content,\n          postfix,\n          response.data.aid,\n        );\n\n        if (callback) callback(attr);\n      })\n      .catch((err) => {\n        console.log('[LocalModel::createAttr] Fail to fetch data.');\n        console.log(err);\n        if (callback) callback(null);\n      });\n  }\n\n  /*\n\t\t현재 위치를 소재로 n개의 문제를 가진 모의고사를 만들어\n\t\t반환한다.\n\n\t\t어지간하면 안터지는데, 특이케이스(모든 지식의 속성이 0개인 경우)\n\t\t에는 터질 수도 있어서 try catch문 사용 요망...\n\t*/\n  createMocktest(n) {\n    return Mocktest.create_mocktest(this.wp, n);\n  }\n\n  /*\n\t\tDANGER ZONE\n\t*/\n  __allocateInfo(name) {\n    let newInfo = new Info([name], []);\n    this.infos[newInfo.jsid] = newInfo;\n    return newInfo;\n  }\n\n  __appendInfo(parent, child) {\n    parent.childs.push(child);\n    child.parent = parent;\n  }\n\n  __appendAttr(info, prefix, content, postfix, aid) {\n    let newAttr = new Attr(info, prefix, content, postfix);\n    newAttr.id = aid;\n    info.attrs.push(newAttr);\n    return newAttr;\n  }\n}\n\n// module.exports = LocalModel;\n\nexport default LocalModel;\n","import React, { createContext, Dispatch, useReducer, useContext } from 'react';\nimport LocalModelCN from '../libs/localmodel';\n\nexport interface Attr {\n  pinfo: Info;\n  prefix: string;\n  content: string;\n  postfix: string;\n  id: string | number;\n  getFullSentence: Function;\n}\n\nexport interface Info {\n  names: string[];\n  attrs: Attr[];\n  comment: string;\n  parent: null | Info;\n  childs: Info[];\n  id: string | number;\n  jsid: string | number;\n}\n\nexport interface MyLocalModel {\n  LocalModel: any;\n  currentPath: string[];\n  subjects: { name: string; id: number }[];\n  info: Info | null; // 진입한 current info\n}\n\nconst LocalModelContext = createContext<MyLocalModel | null>(null);\n\ntype Action =\n  | {\n      type: 'INIT';\n      LocalModel: any;\n    }\n  | {\n      type: 'CHANGE_PATH';\n      path: string[];\n    }\n  | {\n      type: 'CHANGE_SUBJECTS';\n      subjects: { name: string; id: number }[];\n    }\n  | {\n      type: 'CHANGE_INFO';\n      info: any | Info; // any는 고육지책. 좀 더 조일 필요 있음.\n    };\n\ntype LocalModelDispatch = Dispatch<Action>;\n\nconst LocalModelDispatchContext = createContext<LocalModelDispatch | null>(\n  null,\n);\n\nfunction LocalModelReducer(state: MyLocalModel, action: Action): MyLocalModel {\n  switch (action.type) {\n    case 'INIT':\n      return {\n        ...state,\n        LocalModel: action.LocalModel,\n      };\n    case 'CHANGE_PATH':\n      return {\n        ...state,\n        currentPath: action.path,\n      };\n    case 'CHANGE_SUBJECTS':\n      return {\n        ...state,\n        subjects: action.subjects,\n      };\n    case 'CHANGE_INFO':\n      return {\n        ...state,\n        info: action.info,\n      };\n    default:\n      throw new Error('Unhandled action');\n  }\n}\n\nconst is_remote: boolean = true;\nconst LocalModel = new LocalModelCN(!is_remote);\n\n////\ndeclare global {\n  interface Window {\n    LocalModel: any;\n  }\n}\nwindow.LocalModel = LocalModel; // 디버깅을 위해 window에 LocalModel 주입\n////\n\nexport function MyLocalModelContextProvider({\n  children,\n}: {\n  children: React.ReactNode;\n}) {\n  const [localModel, dispatch] = useReducer(LocalModelReducer, {\n    LocalModel: LocalModel,\n    currentPath: [],\n    subjects: [],\n    info: null,\n  });\n\n  return (\n    <LocalModelDispatchContext.Provider value={dispatch}>\n      <LocalModelContext.Provider value={localModel}>\n        {children}\n      </LocalModelContext.Provider>\n    </LocalModelDispatchContext.Provider>\n  );\n}\n\nexport function useMyLocalModel() {\n  const state = useContext(LocalModelContext);\n  if (!state) throw new Error('LocalModelProvider not found');\n  return state;\n}\n\nexport function useMyLocalModelDispatch() {\n  const dispatch = useContext(LocalModelDispatchContext);\n  if (!dispatch) throw new Error('LocalModelProvider not found');\n  return dispatch;\n}\n","import React, { useCallback } from 'react';\nimport styled from 'styled-components';\nimport {\n  useMyLocalModel,\n  useMyLocalModelDispatch,\n} from '../contexts/MyLocalModel';\n\n// vscode-styled-components 모듈 설치로 문자열화 방지.\n\nconst GnbWrapper = styled.div`\n  width: 100%;\n  height: 40px;\n  background-color: rgb(190, 0, 4);\n  display: flex;\n  align-items: center;\n  padding: 8px;\n  color: white;\n  box-sizing: border-box;\n  & > div:first-child {\n    flex: 1;\n  }\n`;\n\nfunction Gnb() {\n  const MyLocalModel = useMyLocalModel();\n  const dispatch = useMyLocalModelDispatch();\n  const handleExitToMainPageButton = useCallback(\n    (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n      MyLocalModel.LocalModel.exitToMainPage();\n      dispatch({ type: 'CHANGE_PATH', path: [] });\n    },\n    [dispatch, MyLocalModel],\n  );\n  const handleGoToUpperPageButton = useCallback(\n    (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n      var info = MyLocalModel.LocalModel.moveToParent();\n      dispatch({\n        type: 'CHANGE_PATH',\n        path: MyLocalModel.LocalModel.getCurrentPath(),\n      });\n      dispatch({ type: 'CHANGE_INFO', info });\n    },\n    [dispatch, MyLocalModel],\n  );\n  return (\n    <GnbWrapper>\n      <div>\n        {MyLocalModel.currentPath.reduce((prev, curr) => {\n          return prev.concat(' > ').concat(curr);\n        }, '> 내 주제 ')}\n      </div>\n      <div>\n        {MyLocalModel.currentPath.length >= 2 && (\n          <button onClick={handleGoToUpperPageButton}>상위 정보</button>\n        )}\n      </div>\n      <div>\n        {MyLocalModel.currentPath.length !== 0 && (\n          <button onClick={handleExitToMainPageButton}>내 주제</button>\n        )}\n      </div>\n    </GnbWrapper>\n  );\n}\n\nexport default Gnb;\n","import React, { useState, useCallback, useRef } from 'react';\nimport Modal from 'react-modal';\nimport styled from 'styled-components';\n\nimport {\n  useMyLocalModel,\n  useMyLocalModelDispatch,\n  Attr as AttrType,\n  // Info as InfoType,\n} from '../contexts/MyLocalModel';\n\nconst customStyles = {\n  overlay: {\n    backgroundColor: 'rgba(0, 0, 0, 0.75)',\n  },\n  content: {\n    padding: '8px',\n    width: '100%',\n    minwidth: '370px',\n    maxWidth: '600px',\n    border: 'none',\n    borderRadius: 0,\n    top: '50%',\n    left: '50%',\n    right: 'auto',\n    bottom: 'auto',\n    marginRight: '-50%',\n    transform: 'translate(-50%, -50%)',\n    boxSizing: 'border-box',\n  } as React.CSSProperties, // 이렇게 안하면 이상한 타입 에러 뜬다 https://stackoverflow.com/questions/46710747/type-string-is-not-assignable-to-type-inherit-initial-unset-fixe\n};\n\n// react에서 styled components 사용시 input tag에서 focus를 잃어버리는 문제\n//https://velog.io/@cjy9306/react%EC%97%90%EC%84%9C-styled-components-%EC%82%AC%EC%9A%A9%EC%8B%9C-input-tag%EC%97%90%EC%84%9C-focus%EB%A5%BC-%EC%9E%83%EC%96%B4%EB%B2%84%EB%A6%AC%EB%8A%94-%EB%AC%B8%EC%A0%9C\n\nModal.setAppElement('#root');\n\nconst ModalContents = styled.div`\n  box-sizing: border-box;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst SelBox = styled.ul`\n  list-style: none;\n  padding: 0;\n  display: flex;\n`;\nconst SelElem = styled.li`\n  display: inline-block;\n  flex: 1;\n  & > button {\n    border: none;\n    text-align: center;\n    width: 100%;\n    height: 40px;\n    box-sizing: border-box;\n    font-size: 0.7em;\n  }\n`;\n\nconst ImportantButtonWrapper = styled.div`\n  display: flex;\n  height: 55px;\n  & > button {\n    border: none;\n    text-align: center;\n  }\n  & > button:nth-child(1) {\n    flex: 1;\n    color: black;\n  }\n  & > button:nth-child(2) {\n    flex: 1;\n    font-weight: bold;\n    background-color: rgb(24, 109, 238);\n    color: white;\n  }\n  & > button:disabled {\n    font-weight: normal;\n    background-color: rgba(24, 109, 238, 0.5);\n  }\n`;\n\nconst Preview = styled.div`\n  font-size: 2em;\n  font-weight: bold;\n  word-break: break-all;\n`;\n\nconst InputBox = styled.div`\n  & > input[type='text'] {\n    width: 100%;\n  }\n`;\n\nconst SelButton = styled.button`\n  background-color: ${(props: { selected?: boolean }) =>\n    props.selected ? 'rgb(187,188,244)' : '#eeeeee'};\n`;\n\n// [출처] [자바스크립트] 한글 받침 구별 함수\n// https://blog.naver.com/azure0777/221414175631\nfunction checkBatchimEnding(word: string) {\n  if (word.length === 0) return false;\n  var lastLetter = word[word.length - 1];\n  var uni = lastLetter.charCodeAt(0);\n\n  if (uni < 44032 || uni > 55203) return false;\n\n  return (uni - 44032) % 28 !== 0;\n}\n\nfunction makeSentence(\n  name: string,\n  prefixes: string[],\n  content: string,\n  postfixes: string[],\n): string {\n  var string = name;\n  if (checkBatchimEnding(name)) {\n    string += prefixes[0];\n  } else {\n    string += prefixes[1];\n  }\n  string += ' ';\n  if (content.trim().length === 0) {\n    string += '???';\n  } else {\n    string += content;\n  }\n  if (checkBatchimEnding(content)) {\n    string += postfixes[0];\n  } else {\n    string += postfixes[1];\n  }\n  return string + '.';\n}\n\nfunction AttrModal({ name }: { name: string[] }) {\n  const dispatch = useMyLocalModelDispatch(); // 마이모델컨텍스트\n  const { LocalModel } = useMyLocalModel();\n  const contentInputRef = useRef() as React.MutableRefObject<HTMLInputElement>;\n  const [modalIsOpen, setIsOpen] = React.useState(false);\n  const [prefix, setPrefix] = useState(0);\n  const [postfix, setPostfix] = useState(0);\n  const [content, setContent] = useState('');\n  // const [past, togglePast] = useState(false);\n  // const [neg, toggleNeg] = useState(false);\n  const [preview, setPreview] = useState('');\n  const [isBatchimContent, setIsBatchimContent] = useState(false);\n  function openModal() {\n    setIsOpen(true);\n    const body: HTMLElement = document.body;\n    body.style.position = 'fixed'; // 뒤에 내용이 움직이는 걸 방지해 준다. (나중엔 App 영역으로 한정지어 줘야함 . 모달조차 스크롤이 필요할 때를 대비)\n  }\n\n  function closeModal() {\n    setIsOpen(false);\n    setPrefix(0);\n    setPostfix(0);\n    setContent('');\n    // togglePast(false);\n    // toggleNeg(false);\n    setPreview('');\n    setIsBatchimContent(false);\n    const body: HTMLElement = document.body;\n    body.style.position = ''; // lock 해제\n  }\n\n  function afterOpenModal() {\n    // 열리고 난 뒤 수행되는 액션을 정의\n    setPreview(\n      makeSentence(name[0], prefixList[prefix], content, postfixList[postfix]),\n    );\n    contentInputRef.current.focus();\n  }\n\n  function afterCloseModal() {\n    // 닫은 뒤 수행되는 액션을 정의.\n    // (closeModal)에서 많은 상태변화를 일으켜야 렌더링 횟수가 줄어드므로 쓸 일 없을듯?\n  }\n\n  const isBatchimName = checkBatchimEnding(name[0]);\n  const prefixList = [\n    ['은', '는'],\n    ['으로', '로'],\n    ['에는', '에는'],\n  ];\n  const postfixList = [\n    ['이다', '다'],\n    ['하다', '하다'],\n    ['된다', '된다'],\n    ['있다', '있다'],\n    ['다', '다'], // 동사형\n  ];\n  const handleMdoalBodyClick = useCallback(\n    (e) => {\n      contentInputRef.current.focus();\n    },\n    [contentInputRef],\n  );\n  const handlePrefixClick = useCallback(\n    (idx: number) => (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n      setPrefix(idx);\n      // contentInputRef.current.focus(); => 이벤트 버블링 덕분에 필요 없다.\n      setPreview(\n        makeSentence(name[0], prefixList[idx], content, postfixList[postfix]),\n      );\n    },\n    [name, postfixList, prefixList, content, postfix],\n  );\n  const handlePostfixClick = useCallback(\n    (idx: number) => (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n      setPostfix(idx);\n      // contentInputRef.current.focus(); => 이벤트 버블링 덕분에 필요 없다.\n      setPreview(\n        makeSentence(name[0], prefixList[prefix], content, postfixList[idx]),\n      );\n    },\n    [content, prefix, name, postfixList, prefixList],\n  );\n  const handleChangeContent = useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      setContent(e.target.value);\n      setIsBatchimContent(checkBatchimEnding(e.target.value));\n      setPreview(\n        makeSentence(\n          name[0],\n          prefixList[prefix],\n          e.target.value,\n          postfixList[postfix],\n        ),\n      );\n    },\n    [prefix, postfix, name, postfixList, prefixList],\n  );\n\n  const commitAttrHandler = useCallback(\n    (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n      const createAttrCallBackHandler = (attr: AttrType) => {\n        if (attr !== null) {\n          // attr이 실질적으론 안쓰이는거 같은데.\n          dispatch({ type: 'CHANGE_INFO', info: LocalModel.getCurrentInfo() });\n          // 여기에 인포 수 변화에 수반되는 문제풀기버튼 활성화를 추가해야 한다. 근데 하위 컴포넌트임.\n          closeModal();\n        } else {\n          alert('server error');\n        }\n      };\n      const prefixDecider = checkBatchimEnding(name[0]) ? 0 : 1;\n      const postfixDecider = checkBatchimEnding(content) ? 0 : 1;\n      LocalModel.createAttr(\n        prefixList[prefix][prefixDecider],\n        content,\n        postfixList[postfix][postfixDecider],\n        createAttrCallBackHandler,\n      );\n    },\n    [\n      LocalModel,\n      content,\n      postfixList,\n      prefixList,\n      prefix,\n      postfix,\n      name,\n      dispatch,\n    ],\n  );\n  return (\n    <React.Fragment>\n      <button onClick={openModal}>속성 추가</button>\n      <Modal\n        closeTimeoutMS={200}\n        isOpen={modalIsOpen}\n        onRequestClose={closeModal}\n        style={customStyles}\n        contentLabel=\"AttrModal\"\n        onAfterClose={afterCloseModal}\n        shouldCloseOnOverlayClick={false}\n        onAfterOpen={afterOpenModal}\n      >\n        {/* <h2 ref={(_subtitle) => (subtitle = _subtitle)}>Hello</h2> */}\n        <ModalContents onClick={handleMdoalBodyClick}>\n          <Preview>{preview}</Preview>\n          <SelBox>\n            {prefixList.map((x, i) => {\n              return (\n                <SelElem key={'prefix-' + i}>\n                  <SelButton\n                    onClick={handlePrefixClick(i)}\n                    selected={prefix === i}\n                  >\n                    {isBatchimName ? x[0] : x[1]}\n                    {/* {prefix === i && ' ✔'} */}\n                  </SelButton>\n                </SelElem>\n              );\n            })}\n          </SelBox>\n          <InputBox>\n            <input\n              type=\"text\"\n              placeholder=\"콘텐츠 입력\"\n              ref={contentInputRef}\n              value={content}\n              onChange={handleChangeContent}\n            />\n          </InputBox>\n          <SelBox>\n            {postfixList.map((x, i) => {\n              return (\n                <SelElem key={'postfix-' + i}>\n                  <SelButton\n                    onClick={handlePostfixClick(i)}\n                    selected={postfix === i}\n                  >\n                    {isBatchimContent ? x[0] : x[1]}\n                    {i === 0 && '(명사형)'}\n                    {i === 4 && '(동사형)'}\n                    {/* {postfix === i && ' ✔'} */}\n                  </SelButton>\n                </SelElem>\n              );\n            })}\n          </SelBox>\n          {/* <SelBox>\n            <SelElem>\n              <SelButton>과거형</SelButton>\n            </SelElem>\n            <SelElem>\n              <SelButton>부정형</SelButton>\n            </SelElem>\n          </SelBox> */}\n          <ImportantButtonWrapper>\n            <button onClick={closeModal}>닫기</button>\n            <button\n              onClick={commitAttrHandler}\n              disabled={!content.trim().length}\n            >\n              저장\n            </button>\n          </ImportantButtonWrapper>\n        </ModalContents>\n      </Modal>\n    </React.Fragment>\n  );\n}\n\nexport default AttrModal;\n","import React, { useState, useCallback, useMemo } from 'react';\nimport styled from 'styled-components';\nimport { Quest as QuestType } from './MockTest';\n\n// style //\n\nconst QuestElem = styled.li`\n  display: flex;\n  flex-direction: column;\n  word-break: break-all;\n  padding: 0 1.5em;\n  & + & {\n    margin-top: 3em;\n  }\n`;\n\nconst Statement = styled.div`\n  display: ${(props: { statement?: string | null }) =>\n    props.statement ? 'block' : 'none'};\n  border: 1px solid black;\n  margin-top: 1em;\n  padding: 1em;\n`;\n\nconst Selection = styled.div`\n  & > label {\n    /* padding-left: 0.7em; */\n    /* flex: 1; */\n    width: 100%;\n    height: 100%;\n    padding: 1em;\n  }\n  /* & > label:hover,\n  label:active {\n    background-color: rgb(111, 197, 237);\n  } */\n  & > label > span {\n    padding-left: 0.7em;\n  }\n  & > label > input[type='radio'] {\n    /* position: absolute; */\n    /* left: -9999px; */\n  }\n  display: flex;\n\n  background-color: ${(props: { selected?: boolean }) =>\n    props.selected ? 'wheat' : 'rgb(235,235,235)'};\n  margin-top: 1em;\n`;\n\nconst InputAnswer = styled.div`\n  width: 100%;\n  margin-top: 1em;\n  & > input[type='text'] {\n    width: 100%;\n    padding: 0;\n    border-width: 0;\n    box-sizing: border-box;\n    border: 1px solid black;\n    padding: 1em;\n  }\n`;\n\n//       //\n\nfunction QuestComp({\n  quest,\n  order,\n  setSelectionFn,\n  selection,\n}: {\n  quest: QuestType;\n  order: number;\n  setSelectionFn: Function;\n  selection: (string | null)[];\n}) {\n  // console.log('render questcomp');\n  const setValueAsync = (value: string) => {\n    var newArr = selection.slice();\n    newArr[order] = value;\n    setSelectionFn(newArr);\n  };\n  const { type, title, statement, choices, answers, materials } = quest;\n  const onChange2 = useCallback(\n    (value: string) => (e: React.ChangeEvent<HTMLInputElement>) => {\n      // console.log('passed to change evt'); // only once\n      setValueAsync(value);\n    },\n    [selection],\n  );\n  const onClick2 = (value: string) => (\n    //useCallback(\n    e: React.MouseEvent<HTMLLabelElement, MouseEvent>,\n  ) => {\n    e.stopPropagation(); // 안에 있는 radio event의 Propagation 을 방지\n    // console.log('click!'); // 두번 되네? 왜지?\n    // setValueAsync(value); //=> 앤또 왜없어도돼지?\n  };\n  // [selection],\n  //);\n\n  const inputChangeHandler = useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      setValueAsync(e.target.value);\n    },\n    [selection], // dep가 중요\n  );\n  console.log(statement?.trim());\n  return (\n    <QuestElem>\n      <div>\n        {order + 1 + '. '}\n        {title}\n      </div>\n      <Statement statement={statement}>\n        {statement\n          ?.trim()\n          .split('\\n')\n          .reduce<any>((a, b) => {\n            return (\n              <React.Fragment>\n                {a && a}\n                {a && <br />}\n                {b}\n              </React.Fragment>\n            );\n          }, '')}\n      </Statement>\n      {choices.length !== 0 ? (\n        choices.map((x, i) => {\n          return (\n            <Selection\n              key={'select-id' + order + '-' + i}\n              selected={\n                type === 'binary'\n                  ? selection[order] === x\n                  : selection[order] === '' + i\n              }\n            >\n              <label\n                onClick={onClick2(type !== 'binary' ? '' + i : x)}\n                htmlFor={'select-' + order + '-' + i}\n              >\n                <input\n                  type=\"radio\"\n                  id={'select-' + order + '-' + i}\n                  name={'select-' + order}\n                  onChange={onChange2(type !== 'binary' ? '' + i : x)}\n                  checked={\n                    type === 'binary'\n                      ? selection[order] === x\n                      : selection[order] === '' + i\n                  }\n                />\n                <span>\n                  {type === 'binary' ? (x === 'T' ? '참' : '거짓') : x}\n                </span>\n              </label>\n            </Selection>\n          );\n        })\n      ) : (\n        <InputAnswer>\n          <input\n            type=\"text\"\n            placeholder=\"정답 입력\"\n            value={\n              selection[order] === null ? '' : selection[order]?.toString()\n            }\n            onChange={inputChangeHandler}\n          />\n        </InputAnswer>\n      )}\n    </QuestElem>\n  );\n}\n\nexport default QuestComp;\n","import React, { useState, useMemo, useCallback } from 'react';\nimport styled from 'styled-components';\nimport { Info } from '../contexts/MyLocalModel';\nimport QuestComp from './Quest';\n\nexport interface Quest {\n  type: 'binary' | 'selection' | 'short';\n  title: string;\n  statement: string | null;\n  choices: string[];\n  answers: string[];\n  materials: Info | null; // 직접적으론 필요없을수도 있어서.\n}\n\nexport interface Mocktest {\n  quests: Quest[];\n}\n\n// style //\nconst MockTestWrapper = styled.div`\n  width: 100%;\n  max-width: 600px;\n  display: flex;\n  flex-direction: column;\n  box-sizing: border-box;\n  position: relative;\n  background-color: white;\n  padding-bottom: 82px;\n  /* margin-bottom: 74px; */\n  z-index: 1;\n  overflow: scroll;\n  height: 100%;\n`;\n\nconst MockTestTitle = styled.div`\n  border-bottom: 1px solid black;\n  font-size: 2em;\n  padding: 30px 0;\n  margin-bottom: 66px;\n  text-align: center;\n`;\n\nconst MockTestBody = styled.ul`\n  list-style: none;\n  padding: 0;\n`;\n\nconst MockTestExit = styled.div`\n  text-align: center;\n  background-color: wheat;\n  position: fixed;\n  right: 0;\n  width: 100%;\n  max-width: 600px;\n  height: 74px;\n  bottom: 0;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  & > button {\n    border: none;\n    text-align: center;\n    width: 100%;\n    height: 100%;\n    box-sizing: border-box;\n  }\n  & > button:nth-child(1) {\n    flex: 1;\n    color: black;\n    background-color: #eaeaea;\n  }\n  & > button:nth-child(2) {\n    flex: 1;\n    font-weight: bold;\n    background-color: rgb(24, 109, 238);\n    color: white;\n  }\n  & > button:disabled {\n    font-weight: normal;\n    background-color: rgba(24, 109, 238, 0.5);\n  }\n`;\n\nfunction MockTest({\n  Mocktest,\n  closeHandler,\n}: {\n  Mocktest: Mocktest;\n  closeHandler: Function;\n}) {\n  const [selection, setSelection] = useState<(string | null)[]>(\n    new Array(Mocktest.quests.length).fill(null), // 문제 수만큼 null로 채워진 배열\n  );\n\n  // const setInvidualFn = (idx: number) => {\n  //   return (value: string) => {\n  //     const newArray = selection.slice();\n  //     newArray[idx] = value;\n  //     setSelection(newArray);\n  //   };\n  // };\n\n  const closeClickHandler = useCallback(\n    (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n      closeHandler();\n    },\n    [],\n  );\n  return (\n    <MockTestWrapper>\n      <MockTestExit>\n        <button>채점</button>\n        <button onClick={closeClickHandler}>닫기</button>\n      </MockTestExit>\n      <MockTestTitle>\n        <div>2020학년도 문제지</div>\n        <div>{selection}</div>\n      </MockTestTitle>\n      <MockTestBody>\n        {Mocktest.quests.map((x, i) => {\n          return (\n            <QuestComp\n              quest={x}\n              key={'quest-' + i}\n              order={i}\n              selection={selection}\n              setSelectionFn={setSelection}\n            />\n          );\n        })}\n      </MockTestBody>\n    </MockTestWrapper>\n  );\n}\n\nMockTest.defaultProps = {\n  Mocktest: {\n    quests: [\n      {\n        type: 'binary',\n        title: '(Demo) 다음 문장의 참/거짓을 판별하시오.',\n        statement: '무봉리순대국밥은 얼큰한 국물이 인상적이다.',\n        choices: ['T', 'F'],\n        answers: ['F'],\n        materials: null,\n      },\n      {\n        type: 'selection',\n        title: '다음 중 소고기국밥에 대한 설명으로 옳은 것을 고르시오.',\n        choices: [\n          '실제로는 없는 브랜드이다.',\n          '순대가 들어있다.',\n          '얼큰한 국물이 인상적이다.',\n          '어쩌면 하나쯤은 있을수도있다.',\n        ],\n        answers: ['0'],\n        materials: null,\n      },\n      {\n        type: 'short',\n        title: '1+1=',\n        choices: [],\n        answers: ['2'],\n        materials: null,\n      },\n      {\n        type: 'selection',\n        title: '인생을 왜 사나요?',\n        choices: ['죽기 위해서', '살기 위해서', '먹기 위해서', '싸기 위해서'],\n        answers: ['1'],\n        materials: null,\n      },\n      {\n        type: 'short',\n        title: '1+1=',\n        choices: [],\n        answers: ['2'],\n        materials: null,\n      },\n    ],\n  },\n};\n\nexport default MockTest;\n","import React, { useState, useCallback, useRef } from 'react';\nimport Modal from 'react-modal';\nimport './ModalTransition.scss';\nimport MockTest from './MockTest';\n\nModal.setAppElement('#root');\n\nconst customStyles = {\n  overlay: {\n    backgroundColor: 'rgba(0, 0, 0, 0.75)',\n  },\n  content: {\n    width: '100%',\n    minwidth: '370px',\n    maxWidth: '600px',\n    border: 'none',\n    borderRadius: 0,\n    // top: 'initial',\n    left: '50%',\n    right: 'auto',\n    bottom: 'auto',\n    marginRight: '-50%',\n    transform: 'translate(-50%, -50%)',\n    boxSizing: 'border-box',\n    height: '90vh',\n    overflow: 'hidden',\n    position: 'relative',\n    padding: '0', // 명시적으로 안써주면 20px가 생김\n  } as React.CSSProperties, // 이렇게 안하면 이상한 타입 에러 뜬다 https://stackoverflow.com/questions/46710747/type-string-is-not-assignable-to-type-inherit-initial-unset-fixe\n};\n\nfunction MockTestModal(props: any) {\n  function afterOpenModal() {\n    // 열리고 난 뒤 수행되는 액션을 정의\n    const body: HTMLElement = document.body;\n    body.style.position = 'fixed';\n  }\n\n  function afterCloseModal() {\n    const body: HTMLElement = document.body;\n    body.style.position = ''; // lock 해제\n  }\n  const closeTrigger = () => {\n    props.setModalIsOpen(false);\n  };\n\n  return (\n    <Modal\n      closeTimeoutMS={200}\n      isOpen={props.modalIsOpen}\n      style={customStyles}\n      contentLabel=\"MockTestModal\"\n      onAfterClose={afterCloseModal}\n      shouldCloseOnOverlayClick={false}\n      onAfterOpen={afterOpenModal}\n    >\n      <MockTest Mocktest={props.mockTestData} closeHandler={closeTrigger} />\n    </Modal>\n  );\n}\n\nMockTestModal.defaultProps = {\n  modalIsOpen: false,\n  setModalIsOpen: () => {},\n  mockTestData: null,\n  setMockTestData: () => {},\n};\n\nexport default MockTestModal;\n","import React, { useCallback, useState } from 'react';\nimport styled from 'styled-components';\nimport {\n  useMyLocalModel,\n  useMyLocalModelDispatch,\n  Attr as AttrType,\n  Info as InfoType,\n} from '../contexts/MyLocalModel';\n\nimport AttrModal from './AttrModal';\nimport MockTestModal from './MockTestModal';\n\n// vscode-styled-components 모듈 설치로 문자열화 방지.\nconst MainWrapper = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  box-sizing: border-box;\n  position: relative;\n`;\n\nconst CenterWrapper = styled.div`\n  width: 100%;\n  max-width: 600px;\n`;\n\nconst Button = styled.button`\n  border-radius: 50px;\n  padding: 5px;\n  min-width: 120px;\n  color: white;\n  font-weight: 600;\n  -webkit-appearance: none;\n  cursor: pointer;\n  &:active,\n  &:focus {\n    outline: none;\n  }\n  background-color: ${(props: { danger?: boolean }) =>\n    props.danger ? 'rgb(190,0,4)' : 'purple'};\n`;\n\nconst Subjects = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  list-style: none;\n  padding: 0;\n  margin: 0;\n`;\nconst Subject = styled.li`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n  width: 33%;\n  height: 150px;\n  box-sizing: border-box;\n  background-color: ${(props: { add?: boolean }) =>\n    props.add ? 'wheat' : 'rgb(237, 240, 241)'};\n  min-width: 120px;\n`;\n\nconst InfoWrapper = styled.div`\n  width: 100%;\n`;\n// const Comment = styled.div``;\nconst Attrs = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\nconst Attr = styled.div`\n  &:before {\n    content: '(연필) ';\n  }\n  padding: 15px 0;\n`;\nconst InfoList = Subjects; // 동률 스타일\nconst Info = Subject; // 동률 스타일\n\nconst CreateProblemWrapper = styled.div`\n  text-align: center;\n  width: 90%;\n  max-width: 600px;\n  height: 75px;\n  position: fixed;\n  background-color: wheat;\n  bottom: -15px;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  box-sizing: border-box;\n`;\nconst CreateProblemButton = styled.button`\n  width: 100%;\n  height: 100%;\n  border: none;\n  text-align: center;\n  box-sizing: border-box;\n  font-size: 1.5em;\n  font-weight: bold;\n  background-color: rgb(190, 0, 4);\n  color: white;\n  &:disabled {\n    font-weight: normal;\n    background-color: rgba(190, 0, 4, 0.5);\n  }\n`;\n\nfunction Main() {\n  const dispatch = useMyLocalModelDispatch();\n  const MyLocalModel = useMyLocalModel();\n\n  /// Mocktest Modal Control state\n  const [isOpenMockTest, setIsOpenMockTest] = useState<boolean>(false);\n  const [mockTestData, setMockTestData] = useState<any>(null);\n  /// End-of Mocktest Modal Control state\n\n  const handleIntoSubject = useCallback(\n    (id: number) => (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n      const moveToSubjectCallBack = (recvInfo: any) => {\n        console.log(recvInfo);\n        dispatch({\n          type: 'CHANGE_PATH',\n          path: MyLocalModel.LocalModel.getCurrentPath(),\n        }); // 패스를 체인지한다.\n        dispatch({\n          type: 'CHANGE_INFO',\n          info: recvInfo,\n        });\n        // setCanSolveProblem(recvInfo.attrs.length > 0); // 문제풀이 가능여부 state를 바꾼다..\n      };\n      MyLocalModel.LocalModel.moveToSubject(id, moveToSubjectCallBack);\n    },\n    [dispatch, MyLocalModel],\n  );\n  const handleIntoInfo = useCallback(\n    (idx: number) => (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n      MyLocalModel.LocalModel.moveToChild(idx); // 하위 Info으로 이동.\n      const savedInfo = MyLocalModel.LocalModel.getCurrentInfo();\n      dispatch({\n        type: 'CHANGE_PATH',\n        path: MyLocalModel.LocalModel.getCurrentPath(),\n      });\n      dispatch({\n        type: 'CHANGE_INFO',\n        info: savedInfo,\n      });\n      // setCanSolveProblem(savedInfo.attrs.length > 0); // 문제풀이 가능여부 state를 바꾼다..\n    },\n    [dispatch, MyLocalModel],\n  );\n\n  const handleCreateAndIntoSubject = useCallback(\n    (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n      const createdHandler = (info: InfoType) => {\n        const savedInfo = MyLocalModel.LocalModel.getCurrentInfo();\n        dispatch({\n          type: 'CHANGE_PATH',\n          path: MyLocalModel.LocalModel.getCurrentPath(),\n        });\n        dispatch({\n          type: 'CHANGE_INFO',\n          info: savedInfo,\n        });\n        // setCanSolveProblem(savedInfo.attrs.length > 0); // 문제풀이 가능여부 state를 바꾼다..\n      };\n      let input_subject: string | undefined | null = prompt('과목 이름은?');\n      if (\n        typeof input_subject === 'string' &&\n        input_subject.trim().length !== 0\n      ) {\n        MyLocalModel.LocalModel.createSubject(\n          input_subject.trim(),\n          createdHandler,\n        );\n      } else {\n        alert('유효하지 않는 과목 이름입니다.');\n      }\n    },\n    [dispatch, MyLocalModel],\n  );\n\n  const handleAddInfo = useCallback(\n    (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n      const createdHandler = (info: InfoType) => {\n        const savedInfo = MyLocalModel.LocalModel.getCurrentInfo();\n        dispatch({\n          type: 'CHANGE_PATH',\n          path: MyLocalModel.LocalModel.getCurrentPath(),\n        });\n        dispatch({\n          type: 'CHANGE_INFO',\n          info: savedInfo,\n        });\n        // setCanSolveProblem(savedInfo.attrs.length > 0); // 문제풀이 가능여부 state를 바꾼다..\n      };\n      let input_info: string | undefined | null = prompt('정보 이름은?');\n      if (typeof input_info === 'string' && input_info.trim().length !== 0) {\n        MyLocalModel.LocalModel.createInfo(input_info.trim(), createdHandler);\n      } else {\n        alert('유효하지 않는 정보 이름입니다.');\n      }\n    },\n    [dispatch, MyLocalModel],\n  );\n\n  const handleCreateMockTest = useCallback(\n    (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n      setMockTestData(MyLocalModel.LocalModel.createMocktest(5));\n      setIsOpenMockTest(true);\n    },\n    [MyLocalModel],\n  );\n\n  return (\n    <MainWrapper>\n      <CenterWrapper>\n        {MyLocalModel.currentPath.length === 0 ? (\n          <Subjects>\n            <Subject add>\n              <button onClick={handleCreateAndIntoSubject}>과목 추가</button>\n            </Subject>\n            {MyLocalModel.subjects.map((x, i) => {\n              return (\n                <Subject key={'subjects-' + x.id}>\n                  <div>{x.name}</div>\n                  <Button onClick={handleIntoSubject(x.id)}>이동</Button>\n                </Subject>\n              );\n            })}\n          </Subjects>\n        ) : (\n          <InfoWrapper>\n            {/* <Comment>코멘트 : {MyLocalModel.info?.comment}</Comment> */}\n            <Attrs>\n              <Attr>\n                {MyLocalModel.info?.names && (\n                  <AttrModal name={MyLocalModel.info.names} />\n                )}\n              </Attr>\n              {MyLocalModel.info?.attrs.map((x: AttrType, i: number) => {\n                return <Attr key={'Attr-' + i}>{x.getFullSentence()}</Attr>;\n              })}\n            </Attrs>\n            <hr />\n            <InfoList>\n              <Info>\n                <button onClick={handleAddInfo}>정보 추가</button>\n              </Info>\n              {MyLocalModel.info?.childs.map((x: InfoType, i: number) => {\n                return (\n                  <Info key={'Info-' + i}>\n                    {x.names.join(' | ')}\n                    <Button danger onClick={handleIntoInfo(i)}>\n                      {'하위 정보 이동'}\n                    </Button>\n                  </Info>\n                );\n              })}\n            </InfoList>\n            <CreateProblemWrapper>\n              <CreateProblemButton\n                disabled={MyLocalModel.info?.attrs.length === 0}\n                onClick={handleCreateMockTest}\n              >\n                문제 풀기\n              </CreateProblemButton>\n              <MockTestModal\n                modalIsOpen={isOpenMockTest && mockTestData !== null}\n                setMockTestData={setMockTestData}\n                setModalIsOpen={setIsOpenMockTest}\n                mockTestData={mockTestData}\n              />\n            </CreateProblemWrapper>\n          </InfoWrapper>\n        )}\n      </CenterWrapper>\n    </MainWrapper>\n  );\n}\n\nexport default Main;\n","import React, { useEffect } from 'react';\nimport {\n  useMyLocalModelDispatch,\n  useMyLocalModel,\n} from './contexts/MyLocalModel';\n\nimport Gnb from './components/Gnb';\nimport Main from './components/Main';\n// import MockTest from './components/MockTest';\n\nfunction AppIn() {\n  const { LocalModel } = useMyLocalModel();\n  const dispatch = useMyLocalModelDispatch();\n  // 앱이 로드되면 다음 액션들을 차례로 디스패치함.\n  useEffect(() => {\n    if (LocalModel.wp !== null) return; // 최상단이 아니면 아래의 액션들은 실행할 필요가 없습니다.\n    // console.log('메인으로 옴. 주제 리스트를 뽑아옵니다.');\n    // 이 부분은 한번 호출되어서\n    const getSubjectsListCallBack = (recv: any) => {\n      // console.log(recv);\n      dispatch({\n        type: 'CHANGE_SUBJECTS',\n        subjects: recv,\n      });\n    };\n    LocalModel.getSubjectsList(getSubjectsListCallBack);\n  }, [LocalModel, dispatch, LocalModel.wp]);\n  return (\n    <div className=\"App\" onClick={(e) => e.preventDefault()}>\n      <Gnb />\n      <Main />\n      {/* <MockTest /> */}\n    </div>\n  );\n}\n\nexport default AppIn;\n","import React from 'react';\nimport { MyLocalModelContextProvider } from './contexts/MyLocalModel';\n// import { ModalProvider } from 'react-modal-hook';\nimport './App.scss';\nimport AppIn from './AppIn';\n\nfunction App() {\n  return (\n    <MyLocalModelContextProvider>\n      <AppIn />\n    </MyLocalModelContextProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}